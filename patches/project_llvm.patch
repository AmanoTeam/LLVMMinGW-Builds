---
 clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp | 6 +++---
 clang/tools/clang-fuzzer/dictionary/CMakeLists.txt          | 4 ++++
 lldb/source/Host/posix/PipePosix.cpp                        | 4 ++--
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp b/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp
index 9b3d2571f..21de94974 100644
--- a/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp
+++ b/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp
@@ -75,7 +75,7 @@ struct SemaphorePipe {
 
   static std::optional<SemaphorePipe> create() {
     int InotifyPollingStopperFDs[2];
-    if (pipe2(InotifyPollingStopperFDs, O_CLOEXEC) == -1)
+    if (pipe(InotifyPollingStopperFDs) == -1)
       return std::nullopt;
     return SemaphorePipe(InotifyPollingStopperFDs);
   }
@@ -191,7 +191,7 @@ void DirectoryWatcherLinux::InotifyPollingLoop() {
   auto ManagedBuffer = std::make_unique<Buffer>();
   char *const Buf = ManagedBuffer->buffer;
 
-  const int EpollFD = epoll_create1(EPOLL_CLOEXEC);
+  const int EpollFD = epoll_create(1);
   if (EpollFD == -1) {
     StopWork();
     return;
@@ -330,7 +330,7 @@ llvm::Expected<std::unique_ptr<DirectoryWatcher>> clang::DirectoryWatcher::creat
     llvm::report_fatal_error(
         "DirectoryWatcher::create can not accept an empty Path.");
 
-  const int InotifyFD = inotify_init1(IN_CLOEXEC);
+  const int InotifyFD = inotify_init();
   if (InotifyFD == -1)
     return llvm::make_error<llvm::StringError>(
         std::string("inotify_init1() error: ") + strerror(errno),
diff --git a/clang/tools/clang-fuzzer/dictionary/CMakeLists.txt b/clang/tools/clang-fuzzer/dictionary/CMakeLists.txt
index ee4aa587e..666b6821c 100644
--- a/clang/tools/clang-fuzzer/dictionary/CMakeLists.txt
+++ b/clang/tools/clang-fuzzer/dictionary/CMakeLists.txt
@@ -2,3 +2,7 @@ add_clang_executable(clang-fuzzer-dictionary
   dictionary.c
   )
 
+set_target_properties(clang-fuzzer-dictionary
+	  PROPERTIES
+	    LINKER_LANGUAGE CXX)
+
diff --git a/lldb/source/Host/posix/PipePosix.cpp b/lldb/source/Host/posix/PipePosix.cpp
index 5e4e8618f..c11224848 100644
--- a/lldb/source/Host/posix/PipePosix.cpp
+++ b/lldb/source/Host/posix/PipePosix.cpp
@@ -78,12 +78,12 @@ Status PipePosix::CreateNew(bool child_processes_inherit) {
     return Status(EINVAL, eErrorTypePOSIX);
 
   Status error;
-#if PIPE2_SUPPORTED
+#if 0 /* PIPE2_SUPPORTED */
   if (::pipe2(m_fds, (child_processes_inherit) ? 0 : O_CLOEXEC) == 0)
     return error;
 #else
   if (::pipe(m_fds) == 0) {
-#ifdef FD_CLOEXEC
+#if 0 /* FD_CLOEXEC */
     if (!child_processes_inherit) {
       if (!SetCloexecFlag(m_fds[0]) || !SetCloexecFlag(m_fds[1])) {
         error.SetErrorToErrno();
-- 
